---
import Container from "@/components/ui/Container";
import ThemeToggle from "../ui/ThemeToggle.tsx";

interface SocialLink {
  service: string;
  url: string;
}

interface NavigationItem {
  id: string;
  title: string;
  url?: string;
  page?: { permalink?: string };
}

const { navigation = { items: [] }, globals = {} } = Astro.props;
const directusURL = import.meta.env.PUBLIC_DIRECTUS_URL;

const lightLogoUrl = globals?.logo
  ? `${directusURL}/assets/${globals.logo}`
  : "/images/logo.svg";

const darkLogoUrl = globals?.logo_dark_mode
  ? `${directusURL}/assets/${globals.logo_dark_mode}`
  : "";
---
<footer class="bg-gray dark:bg-[var(--background-variant-color)] py-16">
  <Container className="text-foreground dark:text-white">
    <div class="flex flex-col md:flex-row justify-between items-start gap-8 pt-8">
      
      <div class="flex-1">
        <a href="/" class="inline-block transition-opacity hover:opacity-70">
          <img 
            src={lightLogoUrl} 
            alt="Logo" 
            class={darkLogoUrl ? "w-[120px] h-auto dark:hidden" : "w-[120px] h-auto"} 
          />
          {darkLogoUrl && (
            <img 
              src={darkLogoUrl} 
              alt="Logo (Dark Mode)" 
              class="w-[120px] h-auto hidden dark:block" 
            />
          )}
        </a>
        {globals?.description && <p class="text-description mt-2">{globals.description}</p>}
        {globals?.social_links && globals.social_links.length > 0 && (
          <div class="mt-4 flex space-x-4">
            {globals.social_links.map((social: SocialLink) => (
              <a 
                href={social.url} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="size-8 rounded bg-transparent inline-flex items-center justify-center transition-colors hover:opacity-70"
              >
                <img 
                  src={`/icons/social/${social.service}.svg`} 
                  alt={`${social.service} icon`} 
                  class="size-6 dark:invert" 
                />
              </a>
            ))}
          </div>
        )}
      </div>

      <div class="flex flex-col items-start md:items-end flex-1">
        <nav class="w-full md:w-auto text-left">
          <ul class="space-y-4">
            {navigation?.items?.map((group: NavigationItem) => (
              <li>
                <a 
                  href={group.page?.permalink || group.url || "#"} 
                  class="text-nav font-medium hover:underline"
                >
                  {group.title}
                </a>
              </li>
            ))}
            <li>
              <ThemeToggle client:load className="dark:text-white" />
            </li>
          </ul>
        </nav>
      </div>

    </div>
  </Container>
</footer>
